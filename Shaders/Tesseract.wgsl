const VERTICES4 = array(
	vec4f(0.0, 0.0, 0.0, 0.0),
	vec4f(1.0, 0.0, 0.0, 0.0),
	vec4f(0.0, 1.0, 0.0, 0.0),
	vec4f(1.0, 1.0, 0.0, 0.0),
	vec4f(0.0, 0.0, 1.0, 0.0),
	vec4f(1.0, 0.0, 1.0, 0.0),
	vec4f(0.0, 1.0, 1.0, 0.0),
	vec4f(1.0, 1.0, 1.0, 0.0),
	vec4f(0.0, 0.0, 0.0, 1.0),
	vec4f(1.0, 0.0, 0.0, 1.0),
	vec4f(0.0, 1.0, 0.0, 1.0),
	vec4f(1.0, 1.0, 0.0, 1.0),
	vec4f(0.0, 0.0, 1.0, 1.0),
	vec4f(1.0, 0.0, 1.0, 1.0),
	vec4f(0.0, 1.0, 1.0, 1.0),
	vec4f(1.0, 1.0, 1.0, 1.0),
);

const INDICES4 = array<u32, 288>(
  // -X Normal Cell (6 quads -> 12 triangles)
  // Quad (1,9,13,5) => Tri (1,9,13) , (1,13,5)
  1,9,13, 1,13,5,
  3,7,15, 3,15,11,
  9,11,15, 9,15,13,
  3,1,5, 3,5,7,
  7,5,13, 7,13,15,
  1,3,11, 1,11,9,

  // X Normal Cell
  0,8,12, 0,12,4,
  2,6,14, 2,14,10,
  8,10,14, 8,14,12,
  2,0,4, 2,4,6,
  6,4,12, 6,12,14,
  0,2,10, 0,10,8,

  // -Y Normal Cell
  6,2,10, 6,10,14,
  3,7,15, 3,15,11,
  10,11,15, 10,15,14,
  3,2,6, 3,6,7,
  7,6,14, 7,14,15,
  2,3,11, 2,11,10,

  // Y Normal Cell
  4,0,8, 4,8,12,
  1,5,13, 1,13,9,
  8,9,13, 8,13,12,
  1,0,4, 1,4,5,
  5,4,12, 5,12,13,
  0,1,9, 0,9,8,

  // -Z Normal Cell
  4,5,7, 4,7,6,
  13,12,14, 13,14,15,
  5,4,12, 5,12,13,
  6,7,15, 6,15,14,
  7,5,13, 7,13,15,
  4,6,14, 4,14,12,

  // Z Normal Cell
  0,1,3, 0,3,2,
  9,8,10, 9,10,11,
  1,0,8, 1,8,9,
  2,3,11, 2,11,10,
  3,1,9, 3,9,11,
  0,2,10, 0,10,8,

  // -W Normal Cell
  9,8,10, 9,10,11,
  12,13,15, 12,15,14,
  9,11,15, 9,15,13,
  10,8,12, 10,12,14,
  8,9,13, 8,13,12,
  11,10,14, 11,14,15,

  // W Normal Cell
  1,0,2, 1,2,3,
  4,5,7, 4,7,6,
  0,1,5, 0,5,4,
  3,2,6, 3,6,7,
  1,3,7, 1,7,5,
  2,0,4, 2,4,6,
);

@group(0) @binding(0) var<storage, read_write> data: array<f32>;

@compute @workgroup_size(64, 1, 1)
fn

@vertex
fn vertex_main(@builtin(vertex_index) i: u32) -> @builtin(position) vec4f {
  let j = INDICES4[i];
  let vertex = VERTICES4[j] - vec4(0.5, 0.5, 0.5, 0.5) + vec4(0.0, 0.0, 1.5, 0.0);
  return vec4(vertex.xyz, vertex.w + 1);
}

@fragment
fn fragment_main() -> @location(0) vec4f {
  return vec4(1.0, 1.0, 1.0, 0.1);
}